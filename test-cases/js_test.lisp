(from 'yolo.js)
(from 'yolo.js swag)
(from 'yolo.js (swag))
(from 'yolo.js (map filter (reduce foldr)))
(from 'yolo.js * yolo)
(await (import "vue.js"))
(. console (log (+ 1 2 3)))
(macro (test_macro . xs) (` (. console (log (@ xs)))))
(test_macro 'one 1 'two 2)
((if true (. console log) (. console error)) "swag")
(define test "123")
(const rest 1234)
(let fest (when true (lambda (x) "swag")))
(const subtract
	(lambda (a b) (- a b)))
(progn
	1
	2
	(+ 3 5))
(if (>= 2 1)
	(. console (log "yay"))
	(. console (log "nay")))
(define (main? a b c)
	(. console (log a b c)))
(set (. document body (getFirstElementChild 1 2 3)) (array 1 2 3))
(const my/cool\map (Map 1 (array 1 2 3) 2 (array 2 3 4) 3 (array 3 4 5)))
